{
  "name": "html-to-vdom",
  "version": "0.5.5",
  "description": "Converts html into a vtree",
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TimBeyer/html-to-vdom.git"
  },
  "author": {
    "name": "Tim Beyer"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/TimBeyer/html-to-vdom/issues"
  },
  "homepage": "https://github.com/TimBeyer/html-to-vdom",
  "dependencies": {
    "ent": "^2.0.0",
    "htmlparser2": "^3.8.2"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "chai-as-promised": "^4.1.1",
    "mocha": "^1.21.4",
    "virtual-dom": "0.0.23"
  },
  "gitHead": "9c02af8c57244a89c8680576b6966eb07d18ddcd",
  "readme": "html-to-vdom [![Build Status](https://travis-ci.org/TimBeyer/html-to-vdom.svg?branch=master)](https://travis-ci.org/TimBeyer/html-to-vdom)\n============\n\nAbout\n-----\n\nThis is yet another library to convert HTML into a [vtree](https://github.com/Matt-Esch/vtree).\nIt's used in conjunction with [virtual-dom](https://github.com/Matt-Esch/virtual-dom) to convert template based views into `virtual-dom` views.\n\nNote\n----\n\nAs of v0.5.1, `html-to-vdom` no longer supports browsers without a full ES5 implementation.\n\nAs of v0.3.0, the VNode and VText classes need to be passed in during library initialization from the `virtual-dom` module you are using.  \nThis is to reduce incompatibilties you might have due to depending on a different version of `virtual-dom` than the one this library would use. \n\nUsage\n-----\n\n```javascript\nvar VNode = require('virtual-dom/vnode/vnode');\nvar VText = require('virtual-dom/vnode/vtext');\n\nvar convertHTML = require('html-to-vdom')({\n    VNode: VNode,\n    VText: VText\n});\n\nvar html = '<div>Foobar</div>';\n\nvar vtree = convertHTML(html);\nvar createElement = require('virtual-dom/create-element');\nvar el = createElement(vTree);\ndocument.body.appendChild(el);\n```\n\n#### Specifying a key\nIn order for `virtual-dom` to detect moves it needs a key. To specify your own custom method of finding a key pass in a method that takes the current tag and returns the key.\n\n```javascript\nvar convertHTML = require('html-to-vdom')({\n    VNode: VNode,\n    VText: VText\n});\n\nconvertHTML({\n    getVNodeKey: function (attributes) {\n        return attributes.id;\n    }\n}, '<div id=\"foo\"></div>');\n```\n\nIf you have a single key method you can also pass the options first, allowing you to create a single bound method for all key lookups:\n\n```javascript\nvar convertHTMLWithKey = convertHTML.bind(null, {\n    getVNodeKey: function (attributes) {\n        return attributes.id;\n    }   \n});\n\nconvertHTMLWithKey('<div id=\"foo\"></div>');\n```\n\nCredits\n-------\n\nThanks to:  \n* [@mattferrin](https://github.com/mattferrin) for noticing that promises could be removed from the API and contributing a PR to do so\n* [@tiagorg](https://github.com/tiagorg) for contributing a PR for style attribute parsing\n* [@dariusriggins](https://github.com/dariusriggins) for adding VNode key support\n* [@jsyang](https://github.com/jsyang) for removing the `lodash` dependency for a leaner build and [improved performance](http://jsperf.com/html-to-vdom-lodash-vs-native)\n* [@bregenspan](https://github.com/bregenspan) for making the dataset conversion standards-compliant\n* [@jesseditson](https://github.com/jesseditson) for adding `<script>` and `<style>` tag support\n",
  "readmeFilename": "README.md",
  "_id": "html-to-vdom@0.5.5",
  "_shasum": "3c3ddab1886f28962305b9c543e27061bfd6355b",
  "_from": "git://github.com/nkzawa/html-to-vdom.git",
  "_resolved": "git://github.com/nkzawa/html-to-vdom.git#9c02af8c57244a89c8680576b6966eb07d18ddcd",
  "_fromGithub": true
}
